[ { "title": "Ruby Keyword Sugar", "url": "/posts/ruby-keyword-sugar/", "categories": "Programming, Ruby", "tags": "Ruby Trick", "date": "2022-10-09 02:50:00 +0600", "snippet": "ProblemImagine you have a public gem and it has a Point class defined as followingclass Point def initialize(x, y) @x = x @y = y end def print \"x: #{@x} and y: #{y}\" endendIts easy to get an instance of Point class. You just pass positional argument - Point.new(5,7)But lest say now you want to provide keyword arguments support. So you rewrite the initialize method.def initialize(x:, y:) @x = x @y = yendYou have just made a breaking change. All of the users of your gem who have been initializing Point with positional argument will now get error.So how do you solve this problem? All we know is that bothPoint.new(5,7)andPoint.new(x: 5, y: 7)should work.Solutiondef initialize(_x=nil, _y=nil, x: _x, y: _y) x &amp;&amp; y or raise ArgumentError, \"Must supply x and y coordinates\" @x = x @y = yend" }, { "title": "Alternate way of writing 'unless' statement in Ruby", "url": "/posts/alternate-way-of-writing-unless-statement-in-ruby/", "categories": "Programming, Ruby", "tags": "Ruby Trick", "date": "2022-09-05 03:41:00 +0600", "snippet": "As a non native english speaker I always find it difficult to read statements with unless. Whenever I see unless, I pause for a few seconds to get my head around it.Actually the word unless is equivalent to if not. So saying Go out unless raining is same as Go out if not raining.unless syntax is something that other traditional language does not have. They use !. In ruby we can use both. It even allows us to use if not.All three statements are equivalent:go_outside unless raininggo_outside if !raininggo_outside if not rainingTo me the third one is much more readable compared to the first and the second." }, { "title": "Setup GH Page Using Chirpy Theme", "url": "/posts/gh-page-with-chirpy-theme/", "categories": "Mixed", "tags": "Jekyll, Chirpy, Github Pages", "date": "2022-09-04 20:36:00 +0600", "snippet": "I have been looking for job for over a month now. I noticed that a lot of job application form asks for personal website/blog. So I decided to start blogging.Github Pages is the easiest way for this as you don’t need any domain or hosting. All you need a github account. I am going to use Jekyll with Chirpy theme. You don’t need Jekyll for running Github Pages but Jekyll is a powerful tool that helps you manage your content.Lets rollStep 1: Start GH repositoryCreate a new repository from the Chirpy Starter and name it GH_USERNAME.github.io. If your username is brayan then the repo would be brayan.github.ioStep 2: ClonningClone the repositoryStep 3: Manage dependenciesFrom the root directory run bundle install to install the dependenciesStep 4: Running the site localyRun following command to start the serverbundle exec jekyll serve If you are using Ruby version 3.0.0 or higher, step 4 may fail. You may fix it by adding webrick to your dependencies by running bundle add webrick.You should be able to see some content by visiting http://localhost:4000.Step 5: Update site configurationOpen _config.yml and update the configurations like language, title, tagline, description, github, twitter, social.Step 6: Update sidebar imagePut an image under assets directory, i.e assets/img/avatar.jpg. Then reference the image in the _config.yml on the avatar key.avatar: assets/img/avatar.jpg An image with 300*300 size works best.Step 7: Customize faviconsFollow the instructions of this postStep 8: Deployment If you are not on linux then run bundle lock --add-platform x86_64-linux On Github create a new branch named gh-pages. Go to Settings tab and from left sidebar go to pages. Update the source and hit save.Screenshot commit and push your changes Visit https://&lt;username&gt;.github.io/ to see your live blog It can take few minutes to see the laest change after every push" } ]
